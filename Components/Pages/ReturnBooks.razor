@page "/return-books"
@using Laws_Brody_Lab_5.Services;
@using Laws_Brody_Lab_5.Components;
@using Laws_Brody_Lab_5.Models;
@inject NavigationManager Nav
@inject ILibraryService lib
@rendermode InteractiveServer

<PageTitle>Return Borrowed Books</PageTitle>

<h1>Return Borrowed Books</h1>

@if (lib.BorrowedBooks.Any())
{
    @if (pickUserReturning == true)
    {
        <div>Click the user that is returning a book.</div>
        @foreach (User user in lib.BorrowedBooks.Keys)
        {
            @if(lib.BorrowedBooks[user].Any())
            {
                <button class="btn btn-danger" style="display:block" @onclick="@(() => PickUser(user))">User ID: @user.Id. User Name: @user.Name User Email: @user.Email</button>
            }
            else
            {
                <div>
                    @user.Name has no borrowed books.
                </div>
            }
        }

    }
    @if (pickBookReturning == true)
    {


        <div>
            Click the book to return
        </div>
        <ul>
            @foreach (Book book in userBooks)
            {
                <li>
                    <button class="btn btn-danger" style="display:block" @onclick="@(() => PickBook(book))">Book ID: @book.Id. Book Title: @book.Title Book Author: @book.Author</button>
                </li>
            }
        </ul>
    }


    @if (pickBookReturning == false && pickUserReturning == false && successMessage == false)
    {
        <div>
            <button @onclick=BookReturn class="btn btn-blue">Press me to return selected book with selected user</button>
        </div>
    }
}
else
{
    <div>
        There are currently no books to return.
    </div>
}

@if (successMessage == true)
{
    <div>
        The book has been returned.
    </div>
} else
{
    <div>
        <button @onclick=Home class="btn btn-blue">Go Back to Home Page</button>
    </div>
}






@code {


    bool pickUserReturning = true;
    bool pickBookReturning = false;

    bool successMessage = false;

    User userWhoReturn;
    Book bookToReturn;
    List<Book> userBooks;

    // actual functions

    private void PickUser(User user)
    {
        userWhoReturn = user;
        pickUserReturning = false;
        lib.BorrowedBooks.TryGetValue(user, out var temp);

        userBooks = temp;

        pickBookReturning = true;

    }

    private void PickBook(Book book)
    {
        bookToReturn = book;
        pickBookReturning = false;
    }



    private void BookReturn()
    {
        successMessage = true;
        lib.BorrowedBooks.TryGetValue(userWhoReturn, out var books);
        books.Remove(bookToReturn);

        lib.Books.Add(bookToReturn);

        
       

        Nav.NavigateTo("/return-books", forceLoad: true);
    }


    private void Home()
    {
        Nav.NavigateTo("/");
    }
}